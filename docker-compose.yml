version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: pneumonia-db
    environment:
      POSTGRES_DB: pneumonia_detection
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - pneumonia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: pneumonia-backend
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/pneumonia_detection
      - ENVIRONMENT=development
      - JWT_SECRET_KEY=your-secret-key-here
      - CORS_ORIGINS=http://localhost:3000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
      - ./model:/app/model
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pneumonia-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: pneumonia-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENVIRONMENT=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - pneumonia-network
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local

networks:
  pneumonia-network:
    driver: bridge
